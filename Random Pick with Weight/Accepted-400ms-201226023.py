# 
# Generated by fetch-leetcode-submission project on GitHub.
# https://github.com/gitzhou/fetch-leetcode-submission
# Contact Me: aaron67[AT]aaron67.cc
# 
# Random Pick with Weight
# https://leetcode.com/problems/random-pick-with-weight/
# 

class Solution(object):

    def __init__(self, w):
        """
        :type w: List[int]
        """
        self.N = len(w)
        self.preSum = [0]*self.N
        self.preSum[0] = w[0]
        for i in range(1, self.N):
            self.preSum[i] = w[i] + self.preSum[i-1]
        self.totalW = self.preSum[self.N-1]
        

    def pickIndex(self):
        """
        :rtype: int
        """
        ranNum = random.randint(0, self.totalW - 1)
        return self.findNext(ranNum)
    
    def findNext(self, num):
        left = 0
        right = self.N - 1
        if right == 0:
            return 0
        while left < right:
            if right - left == 1:
                if self.preSum[left] > num:
                    return left
                else:
                    return right
            mid = left + (right - left)//2
            if self.preSum[mid] < num:
                left = mid
            elif self.preSum[mid] > num:
                right = mid
            else:
                return mid + 1
                
            
        


# Your Solution object will be instantiated and called as such:
# obj = Solution(w)
# param_1 = obj.pickIndex()

