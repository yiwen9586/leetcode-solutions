# 
# Generated by fetch-leetcode-submission project on GitHub.
# https://github.com/gitzhou/fetch-leetcode-submission
# Contact Me: aaron67[AT]aaron67.cc
# 
# Maximize Distance to Closest Person
# https://leetcode.com/problems/maximize-distance-to-closest-person/
# 

class Solution(object):    
    def maxDistToClosest(self, seats):
        """
        :type seats: List[int]
        :rtype: int
        """
        maxDis = 0
        size = len(seats)
        list = []

        for i in range(0, size):
            if seats[i] == 1:
                list.append(i)

        leng = len(list)
        if leng == 1:
            maxDis = max(list[0]-0, size-1-list[0])
        else:
            maxDis = list[0]
            for i in range(0, leng-1):
                maxDis = max((list[i+1]-list[i])//2, maxDis)
            maxDis = max(size-1-list[i+1], maxDis)
        print(list)
        if maxDis == 0:
            return 1
        else:
            return maxDis
        

