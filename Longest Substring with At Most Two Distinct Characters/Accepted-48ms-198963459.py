# 
# Generated by fetch-leetcode-submission project on GitHub.
# https://github.com/gitzhou/fetch-leetcode-submission
# Contact Me: aaron67[AT]aaron67.cc
# 
# Longest Substring with At Most Two Distinct Characters
# https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/
# 

class Solution(object):
    def lengthOfLongestSubstringTwoDistinct(self, s):
        """
        :type s: str
        :rtype: int
        """
        leng = len(s)
        if leng == 0:
            return 0
        maxLen = 1
        start = 0
        end = 0
        chars = [s[start]]
        prev = s[start]
        while start < leng and end < leng:
            if s[end] not in chars and len(chars) == 2:
                start = index
                chars[0] = s[start]
                chars[1] = s[end]
                index = end
            else:
                if s[end] is not prev:
                    index = end
                if s[end] not in chars and len(chars) == 1:
                    chars.append(s[end])
                if end - start + 1 > maxLen:
                    #print(s[start:end + 1])
                    maxLen = end - start + 1
            prev = s[end]

            end += 1

        return maxLen

