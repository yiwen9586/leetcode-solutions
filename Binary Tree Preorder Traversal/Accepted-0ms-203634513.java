// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Binary Tree Preorder Traversal
// https://leetcode.com/problems/binary-tree-preorder-traversal/
// 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
     
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<Integer>();
        if(root == null) return res;
        DFS(root, res);
        return res;
    }
    
    public void DFS (TreeNode root, List <Integer> list){
        if(root == null) return;
        
        list.add(root.val);
        DFS(root.left, list);
        DFS(root.right, list);
    }

}

